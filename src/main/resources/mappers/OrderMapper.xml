<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zjyouth.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.zjyouth.pojo.Order">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_no" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="shipping_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="payment" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
      <arg column="payment_type" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="postage" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="payment_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="send_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="close_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="logistics_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, order_no, user_id, shipping_id, payment, payment_type, postage, status, payment_time, 
    send_time, end_time, close_time, create_time, update_time, logistics_id
  </sql>











  <!--<resultMap id="BaseResultMap" type="com.zjyouth.pojo.Order">-->
  <!--<constructor>-->
  <!--<idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />-->
  <!--<arg column="order_no" javaType="java.lang.Long" jdbcType="BIGINT" />-->
  <!--<arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />-->
  <!--<arg column="shipping_id" javaType="java.lang.Integer" jdbcType="INTEGER" />-->
  <!--<arg column="payment" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />-->
  <!--<arg column="payment_type" javaType="java.lang.Integer" jdbcType="INTEGER" />-->
  <!--<arg column="postage" javaType="java.lang.Integer" jdbcType="INTEGER" />-->
  <!--<arg column="status" javaType="java.lang.Integer" jdbcType="INTEGER" />-->
  <!--<arg column="payment_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />-->
  <!--<arg column="send_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />-->
  <!--<arg column="end_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />-->
  <!--<arg column="close_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />-->
  <!--<arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />-->
  <!--<arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />-->
  <!--</constructor>-->
  <!--</resultMap>-->
  <!--<sql id="Base_Column_List">-->
  <!--id, order_no, user_id, shipping_id, payment, payment_type, postage, status, payment_time, -->
  <!--send_time, end_time, close_time, create_time, update_time-->
  <!--</sql>-->



  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mmall_order
    where id = #{id,jdbcType=INTEGER}
  </select>


  <!--<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">-->
  <!--select-->
  <!--<include refid="Base_Column_List" />-->
  <!--from mmall_order-->
  <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</select>-->







  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from mmall_order
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">-->
  <!--delete from mmall_order-->
  <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</delete>-->


  <insert id="insert" parameterType="com.zjyouth.pojo.Order">
    insert into mmall_order (id, order_no, user_id,
    shipping_id, payment, payment_type,
    postage, status, payment_time,
    send_time, end_time, close_time,
    create_time, update_time, logistics_id
    )
    values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER},
    #{shippingId,jdbcType=INTEGER}, #{payment,jdbcType=DECIMAL}, #{paymentType,jdbcType=INTEGER},
    #{postage,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP},
    #{sendTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP},
    now(), now(), #{logisticsId,jdbcType=INTEGER}
    )
  </insert>

  <!--<insert id="insert" parameterType="com.zjyouth.pojo.Order">-->
  <!--insert into mmall_order (id, order_no, user_id, -->
  <!--shipping_id, payment, payment_type, -->
  <!--postage, status, payment_time, -->
  <!--send_time, end_time, close_time, -->
  <!--create_time, update_time)-->
  <!--values (#{id,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT}, #{userId,jdbcType=INTEGER}, -->
  <!--#{shippingId,jdbcType=INTEGER}, #{payment,jdbcType=DECIMAL}, #{paymentType,jdbcType=INTEGER}, -->
  <!--#{postage,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{paymentTime,jdbcType=TIMESTAMP}, -->
  <!--#{sendTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{closeTime,jdbcType=TIMESTAMP}, -->
  <!--now(), now())-->
  <!--</insert>-->



  <insert id="insertSelective" parameterType="com.zjyouth.pojo.Order">
    insert into mmall_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="shippingId != null">
        shipping_id,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="paymentType != null">
        payment_type,
      </if>
      <if test="postage != null">
        postage,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="paymentTime != null">
        payment_time,
      </if>
      <if test="sendTime != null">
        send_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="closeTime != null">
        close_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="logisticsId != null">
        logistics_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="shippingId != null">
        #{shippingId,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="postage != null">
        #{postage,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        now(),
      </if>
      <if test="updateTime != null">
        now(),
      </if>
      <if test="logisticsId != null">
        #{logisticsId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>





  <update id="updateByPrimaryKeySelective" parameterType="com.zjyouth.pojo.Order">
    update mmall_order
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="shippingId != null">
        shipping_id = #{shippingId,jdbcType=INTEGER},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=DECIMAL},
      </if>
      <if test="paymentType != null">
        payment_type = #{paymentType,jdbcType=INTEGER},
      </if>
      <if test="postage != null">
        postage = #{postage,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="paymentTime != null">
        payment_time = #{paymentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sendTime != null">
        send_time = #{sendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="closeTime != null">
        close_time = #{closeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = now(),
      </if>
      <if test="logisticsId != null">
        logistics_id = #{logisticsId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zjyouth.pojo.Order">
    update mmall_order
    set order_no = #{orderNo,jdbcType=BIGINT},
    user_id = #{userId,jdbcType=INTEGER},
    shipping_id = #{shippingId,jdbcType=INTEGER},
    payment = #{payment,jdbcType=DECIMAL},
    payment_type = #{paymentType,jdbcType=INTEGER},
    postage = #{postage,jdbcType=INTEGER},
    status = #{status,jdbcType=INTEGER},
    payment_time = #{paymentTime,jdbcType=TIMESTAMP},
    send_time = #{sendTime,jdbcType=TIMESTAMP},
    end_time = #{endTime,jdbcType=TIMESTAMP},
    close_time = #{closeTime,jdbcType=TIMESTAMP},
    create_time = #{createTime,jdbcType=TIMESTAMP},
    update_time = now(),
    logistics_id = #{logisticsId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--<update id="updateByPrimaryKey" parameterType="com.zjyouth.pojo.Order">-->
  <!--update mmall_order-->
  <!--set order_no = #{orderNo,jdbcType=BIGINT},-->
  <!--user_id = #{userId,jdbcType=INTEGER},-->
  <!--shipping_id = #{shippingId,jdbcType=INTEGER},-->
  <!--payment = #{payment,jdbcType=DECIMAL},-->
  <!--payment_type = #{paymentType,jdbcType=INTEGER},-->
  <!--postage = #{postage,jdbcType=INTEGER},-->
  <!--status = #{status,jdbcType=INTEGER},-->
  <!--payment_time = #{paymentTime,jdbcType=TIMESTAMP},-->
  <!--send_time = #{sendTime,jdbcType=TIMESTAMP},-->
  <!--end_time = #{endTime,jdbcType=TIMESTAMP},-->
  <!--close_time = #{closeTime,jdbcType=TIMESTAMP},-->
  <!--create_time = #{createTime,jdbcType=TIMESTAMP},-->
  <!--update_time = #{updateTime,jdbcType=TIMESTAMP},-->
  <!--logistics_id = #{logisticsId,jdbcType=INTEGER}-->
  <!--where id = #{id,jdbcType=INTEGER}-->
  <!--</update>-->




  <!--
       //orderNo 和 userId查询一下订单有没有  多个参数要写Param注解
    Order selectByUserIdAndOrderNo(@Param("userId") Integer userId,@Param("orderNo") Long orderNo);
  -->
  <select id="selectByUserIdAndOrderNo" parameterType="map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mmall_order
    where order_no = #{orderNo}
    and user_id = #{userId}
  </select>


  <!--
       //按照订单号查找订单  不是主键自增字段
       Order selectByOrderNo(Long orderNo);
  -->
  <select id="selectByOrderNo" parameterType="long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mmall_order
    where order_no = #{orderNo}
  </select>

  <!--
        //查找该用户的所有订单要分页
        List<Order> selectByUserId(Integer userId);
  -->
  <select id="selectByUserId" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mmall_order
    where user_id = #{userId}
    order by create_time desc
  </select>

  <!--
        //查找该用户的所有订单要分页
        List<Order> selectByUserId(Integer userId);
  -->
  <select id="selectByUserIdNeedPay" parameterType="int" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mmall_order
    where user_id = #{userId} and status = 10
    order by create_time desc
  </select>



  <!--
       //查找所有订单要分页   管理员使用的接口
       List<Order> selectAllOrder();
  -->
  <select id="selectAllOrder" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mmall_order
    order by create_time desc
  </select>


  <!--  统计订单数量  -->
  <select id="getOrderCount" resultType="int">
    select
      count(id)
    from mmall_order
    order by create_time desc

  </select>
  <!--
     //订单按照用户名查询先差用户id 在差order
     Order selectByOrderNo(Long orderNo);
  -->
  <select id="selectManageOrderByUserId" parameterType="long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from mmall_order
    where user_id = #{userId}
    order by create_time desc
  </select>






</mapper>